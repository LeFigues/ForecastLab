@page "/health"
@using fl_front.Services
@using fl_front.Models
@inject IHealthService HealthService
@inject AppState AppState

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />

<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h3 class="text-info animate__animated animate__fadeInLeft">🩺 Estado del Sistema</h3>
        <button class="btn btn-outline-light animate__animated animate__fadeInRight" @onclick="RefreshStatus">
            <i class="fas fa-sync-alt fa-spin"></i> Actualizar
        </button>
    </div>

    @if (isLoading)
    {
        <div class="d-flex justify-content-center my-5 animate__animated animate__fadeIn">
            <div class="spinner-border text-info" role="status">
                <span class="visually-hidden">Cargando...</span>
            </div>
        </div>
    }
    else if (response is not null)
    {
        <div class="row g-4 mb-4 animate__animated animate__fadeInUp">
            <div class="col-md-6">
                <div class="card border-0 bg-gradient bg-success bg-opacity-25 text-white shadow">
                    <div class="card-body text-center">
                        <h6 class="text-uppercase text-muted">Estado General</h6>
                        <h3 class="fw-bold">
                            <span class="badge bg-success p-2 px-4">@response.OverallStatus</span>
                        </h3>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card border-0 bg-gradient bg-dark bg-opacity-50 text-white shadow">
                    <div class="card-body text-center">
                        <h6 class="text-uppercase text-muted">Componentes Totales</h6>
                        <h3 class="fw-bold">@response.Checks.Count()</h3>
                    </div>
                </div>
            </div>
        </div>

        <div class="card border border-secondary bg-dark text-white shadow animate__animated animate__fadeInUp animate__delay-1s">
            <div class="card-header bg-transparent border-bottom border-secondary">
                <h5 class="mb-0">📋 Detalles por Componente</h5>
            </div>
            <div class="card-body">
                <table class="table table-hover table-dark align-middle">
                    <thead>
                        <tr class="text-uppercase text-secondary">
                            <th>Componente</th>
                            <th>Estado</th>
                            <th>Detalle</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in response.Checks)
                        {
                            <tr class="animate__animated animate__fadeInUp">
                                <td class="fw-semibold">@item.Key</td>
                                <td>
                                    @if (item.Value.Status is not null)
                                    {
                                        <span class="badge @(item.Value.Status == "Healthy" ? "bg-success" : "bg-danger")">
                                            @item.Value.Status
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">—</span>
                                    }
                                </td>
                                <td>
                                    @if (item.Value.Detail is not null)
                                    {
                                        @item.Value.Detail
                                    }
                                    else
                                    {
                                        <ul class="list-unstyled">
                                            @if (item.Value.InputFolderExists is not null)
                                            {
                                                <li><i class="fas fa-folder-open text-warning"></i> InputFolder: <strong>@(item.Value.InputFolderExists == true ? "Sí" : "No")</strong></li>
                                            }
                                            @if (item.Value.OutputFolderExists is not null)
                                            {
                                                <li><i class="fas fa-folder text-warning"></i> OutputFolder: <strong>@(item.Value.OutputFolderExists == true ? "Sí" : "No")</strong></li>
                                            }
                                            @if (item.Value.PermanentFolderExists is not null)
                                            {
                                                <li><i class="fas fa-archive text-secondary"></i> PermanentFolder: <strong>@(item.Value.PermanentFolderExists == true ? "Sí" : "No")</strong></li>
                                            }
                                            @if (item.Value.ScriptExtractJsonExists is not null)
                                            {
                                                <li><i class="fas fa-file-code text-info"></i> Script JSON: <strong>@(item.Value.ScriptExtractJsonExists == true ? "Sí" : "No")</strong></li>
                                            }
                                            @if (item.Value.PythonExeExists is not null)
                                            {
                                                <li><i class="fab fa-python text-success"></i> Python EXE: <strong>@(item.Value.PythonExeExists == true ? "Sí" : "No")</strong></li>
                                            }
                                        </ul>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-danger mt-4 animate__animated animate__fadeIn">
            ❌ No se pudo obtener el estado del sistema.
        </div>
    }
</div>

@code {
    private HealthCheckResponse? response;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        if (AppState.LastHealthStatus is not null)
        {
            response = AppState.LastHealthStatus;
            isLoading = false;
            return;
        }

        await RefreshStatus();
    }

    private async Task RefreshStatus()
    {
        isLoading = true;
        response = await HealthService.GetHealthStatusAsync();
        AppState.LastHealthStatus = response;
        isLoading = false;
    }
}