@page "/demand-reports"
@using fl_front.Services
@using fl_front.Models
@using ApexCharts
@inject IDemandReportService DemandReportService

<!-- Animate.css for smooth transitions -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

<style>
    .transition-fast {
        transition: all 0.3s ease-in-out;
    }

    .btn:hover {
        transform: scale(1.03);
        background-color: rgba(255, 255, 255, 0.05);
    }

    .active {
        border-width: 2px !important;
    }
</style>

<!-- ENCABEZADO CON LOGO TIPO CÓDIGO -->
<h3 class="text-center text-uppercase text-primary mb-4 fw-bold animate__animated animate__fadeInDown">
    <span class="d-inline-flex justify-content-center align-items-center me-2"
          style="width: 50px; height: 50px; border-radius: 50%; background: linear-gradient(135deg, #007bff, #00c6ff); box-shadow: 0 4px 8px rgba(0,0,0,0.2); border: 2px solid white;">
        <i class="bi bi-bar-chart-fill text-white" style="font-size: 1.5rem;"></i>
    </span>
    REPORTES DE DEMANDA
</h3>

@if (isLoading)
{
    <div class="text-center mt-5 animate__animated animate__fadeIn">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Cargando...</span>
        </div>
    </div>
}
else
{
    <!-- BOTONES ESTILO PRO -->
    <div class="mb-4 d-flex justify-content-center flex-wrap gap-3 animate__animated animate__fadeIn">
        <button class="btn btn-outline-primary px-4 py-2 rounded-pill shadow-sm fw-semibold transition-fast
                       @(activeTab == "summary" ? "active fw-bold border-2" : "")"
                @onclick='() => activeTab = "summary"'>
            <i class="bi bi-bar-chart-fill me-2"></i> Resumen
        </button>

        <button class="btn btn-outline-danger px-4 py-2 rounded-pill shadow-sm fw-semibold transition-fast
                       @(activeTab == "detail" ? "active fw-bold border-2" : "")"
                @onclick='() => activeTab = "detail"'>
            <i class="bi bi-card-list me-2"></i> Detalle
        </button>

        <button class="btn btn-outline-success px-4 py-2 rounded-pill shadow-sm fw-semibold transition-fast
                       @(activeTab == "simulation" ? "active fw-bold border-2" : "")"
                @onclick='() => activeTab = "simulation"'>
            <i class="bi bi-gear-wide-connected me-2"></i> Simulación
        </button>

        <button class="btn btn-outline-info px-4 py-2 rounded-pill shadow-sm fw-semibold transition-fast
                       @(activeTab == "history" ? "active fw-bold border-2" : "")"
                @onclick='() => activeTab = "history"'>
            <i class="bi bi-calendar3 me-2"></i> Historial
        </button>
    </div>

    <!-- CONTENIDO POR PESTAÑAS -->
    <div class="animate__animated animate__fadeInUp">
        @switch (activeTab)
        {
            case "summary":
                <div class="row g-4">
                    <div class="col-md-4">
                        <div class="card border-0 shadow-lg border-start border-5 border-primary">
                            <div class="card-body text-center">
                                <h6 class="text-muted">Equipos</h6>
                                <h2 class="fw-bold text-primary">@summary?.TotalEquipmentItems</h2>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="card border-0 shadow-lg border-start border-5 border-success">
                            <div class="card-body text-center">
                                <h6 class="text-muted">Insumos</h6>
                                <h2 class="fw-bold text-success">@summary?.TotalSupplyItems</h2>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="card border-0 shadow-lg border-start border-5 border-warning">
                            <div class="card-body text-center">
                                <h6 class="text-muted">Reactivos</h6>
                                <h2 class="fw-bold text-warning">@summary?.TotalReactiveItems</h2>
                            </div>
                        </div>
                    </div>
                </div>
                break;

            case "detail":
                <div class="mt-3">
                    @foreach (var item in detail)
                    {
                        <div class="card mb-4 shadow-lg animate__animated animate__fadeInUp">
                            <div class="card-header bg-dark text-white">
                                <strong>@item.CareerName - @item.SubjectName</strong>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col">
                                        <h6 class="text-primary">Equipos</h6>
                                        <ul>
                                            @foreach (var eq in item.Equipment)
                                            {
                                                <li>@eq.Description: <strong>@eq.TotalQuantity @eq.Unit</strong></li>
                                            }
                                        </ul>
                                    </div>
                                    <div class="col">
                                        <h6 class="text-success">Insumos</h6>
                                        <ul>
                                            @foreach (var su in item.Supplies)
                                            {
                                                <li>@su.Description: <strong>@su.TotalQuantity @su.Unit</strong></li>
                                            }
                                        </ul>
                                    </div>
                                    <div class="col">
                                        <h6 class="text-warning">Reactivos</h6>
                                        <ul>
                                            @foreach (var re in item.Reactives)
                                            {
                                                <li>@re.Description: <strong>@re.TotalQuantity @re.Unit</strong></li>
                                            }
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                break;

            case "simulation":
                <div class="table-responsive mt-3">
                    <table class="table table-hover table-bordered text-center">
                        <thead class="table-primary text-white">
                            <tr>
                                <th>Descripción</th>
                                <th>Unidad</th>
                                <th>Demanda total</th>
                                <th>Uso diario</th>
                                <th>Pedido sugerido</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var sim in simulation?.Items ?? new())
                            {
                                <tr class="@(sim.RecommendedOrder > sim.TotalDemand * 1.5 ? "table-danger" : "")">
                                    <td>@sim.Description</td>
                                    <td>@sim.Unit</td>
                                    <td>@sim.TotalDemand</td>
                                    <td>@sim.AverageDailyUse</td>
                                    <td>@sim.RecommendedOrder</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                break;

            case "history":
                <div class="row">
                    <div class="col-md-7">
                        <table class="table table-striped table-bordered text-center">
                            <thead class="table-dark">
                                <tr>
                                    <th>Fecha</th>
                                    <th>Item</th>
                                    <th>Unidad</th>
                                    <th>Cantidad</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var h in history)
                                {
                                    <tr>
                                        <td>@h.Date.ToString("dd/MM/yyyy")</td>
                                        <td>@h.Item</td>
                                        <td>@h.Unit</td>
                                        <td>@h.Quantity</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="col-md-5"></div>
                </div>
                break;
        }
    </div>
}

@code {
    private string activeTab = "summary";
    private bool isLoading = true;

    private DemandSummary? summary;
    private List<DemandDetail> detail = new();
    private DemandSimulation? simulation;
    private List<DemandHistoryItem> history = new();

    private readonly DateTime from = new(2025, 05, 01);
    private readonly DateTime to = new(2025, 05, 11);

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;

        summary = await DemandReportService.GetSummaryAsync(from, to);
        detail = await DemandReportService.GetDetailAsync(from, to);
        simulation = await DemandReportService.GetSimulationAsync(from, to);
        history = await DemandReportService.GetHistoryAsync(from, to);

        isLoading = false;
    }
}
