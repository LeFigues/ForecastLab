@page "/analysis-history"
@inject fl_front.Interfaces.IPdfAnalysisServiceF PdfServiceF

<h3>Historial de Archivos PDF Analizados</h3>

@if (archivos == null)
{
    <p>Cargando...</p>
}
else if (archivos.Count == 0)
{
    <p>No hay archivos registrados.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Archivo</th>
                <th>Tipo</th>
                <th>Fecha de subida</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var f in archivos)
            {
                <tr>
                    <td>@f.FileName</td>
                    <td>@f.Tipo</td>
                    <td>@f.UploadedAt.ToLocalTime().ToString("yyyy-MM-dd HH:mm")</td>
                    <td>
                        <button class="btn btn-sm btn-info" @onclick="() => VerAnalisis(f.Id)">Ver análisis</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@if (analisis != null)
{
    <div class="mt-4">
        <h5>Análisis de: @analisis.FileName</h5>
        <p><strong>Versión:</strong> @analisis.Version</p>
        <p><strong>Código:</strong> @analisis.RegistryCode</p>
        <p><strong>Materia:</strong> @analisis.Subject</p>
        <pre>@analisis.RawJson</pre>
    </div>
}

@code {
    private List<fl_front.Dtos.Guides.GuideFileDtoF>? archivos;
    private fl_front.Dtos.Guides.GuideAnalysisDtoF? analisis;

    protected override async Task OnInitializedAsync()
    {
        archivos = await PdfServiceF.GetFilesAsync();
    }

    private async Task VerAnalisis(string id)
    {
        analisis = null;
        var raw = await PdfServiceF.GetAnalysisByFileIdAsync(id);
        if (raw != null)
        {
            raw.FileName = archivos?.FirstOrDefault(x => x.Id == id)?.FileName ?? "Desconocido";
            analisis = raw;
        }
    }
}