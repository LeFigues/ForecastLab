@page "/auto-analyze-guide"
@inject fl_front.Interfaces.IPdfAnalysisServiceF PdfServiceF

<div class="container mt-4">
    <div class="card p-4 shadow rounded-4">
        <h3 class="text-primary mb-4">
            <i class="fas fa-microscope me-2"></i>Análisis Automático de Guía de Laboratorio
        </h3>

        <div class="mb-3">
            <label class="form-label fw-bold"><i class="fas fa-robot me-2"></i>Modelo de IA</label>
            <select class="form-select" @bind="modelo">
                <option value="gpt-4o">GPT-4o (óptimo)</option>
                <option value="gpt-4">GPT-4</option>
                <option value="gpt-3.5-turbo">GPT-3.5 Turbo</option>
            </select>
        </div>

        <div class="mb-3">
            <label class="form-label fw-bold"><i class="fas fa-file-pdf me-2"></i>Seleccionar Archivo PDF</label>
            <InputFile OnChange="HandleFileChange" accept="application/pdf" class="form-control" />
        </div>

        <button class="btn btn-success w-100 mt-3" @onclick="SubirYAnalizar" disabled="@(archivo == null || string.IsNullOrEmpty(modelo))">
            <i class="fas fa-magic me-2"></i>Analizar Guía
        </button>

        @if (!string.IsNullOrWhiteSpace(resultado))
        {
            <div class="alert alert-info mt-4">
                <label class="form-label fw-bold"><i class="fas fa-chart-line me-2"></i>Resultado del Análisis</label>
                <pre class="bg-white border rounded p-3 small text-break">@resultado</pre>
            </div>
        }
    </div>
</div>

@code {
    private IBrowserFile? archivo;
    private string modelo = "gpt-4o";
    private string resultado = string.Empty;

    private void HandleFileChange(InputFileChangeEventArgs e)
    {
        archivo = e.File;
        resultado = string.Empty;
    }

    private async Task SubirYAnalizar()
    {
        if (archivo == null) return;
        resultado = await PdfServiceF.AnalyzePdfGuideAsync(archivo, modelo);
    }
}
