@page "/report-forecast"
@using fl_front.Dtos.Reports
@using fl_front.Interfaces
@inject IReportServiceF ReportService

<h3>Reporte: Consumo Real vs Pronóstico</h3>

<div class="row mb-3">
    <div class="col">
        <label class="form-label">Desde</label>
        <input type="date" class="form-control" @bind="from" />
    </div>
    <div class="col">
        <label class="form-label">Hasta</label>
        <input type="date" class="form-control" @bind="to" />
    </div>
    <div class="col">
        <label class="form-label">Laboratorio</label>
        <input class="form-control" @bind="labId" />
    </div>
    <div class="col">
        <label class="form-label">Categoría</label>
        <input class="form-control" @bind="categoria" />
    </div>
    <div class="col-auto align-self-end">
        <button class="btn btn-primary" @onclick="CargarReporte">Generar Reporte</button>
    </div>
</div>

@if (datos == null)
{
    <p>Esperando datos...</p>
}
else if (datos.Count == 0)
{
    <p>No se encontraron resultados.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Mes</th>
                <th>Insumo</th>
                <th>Consumo real</th>
                <th>Pronóstico</th>
                <th>Diferencia</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var d in datos)
            {
                <tr>
                    <td>@d.Month</td>
                    <td>@d.SupplyName</td>
                    <td>@d.RealConsumption</td>
                    <td>@d.Forecasted</td>
                    <td>@d.Difference</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private DateTime from = DateTime.Today.AddMonths(-3);
    private DateTime to = DateTime.Today;
    private string? labId;
    private string? categoria;

    private List<ConsumoVsPronosticoDtoF>? datos;

    private async Task CargarReporte()
    {
        var filter = new ReportFilterDtoF
            {
                From = from,
                To = to,
                LabId = labId,
                Categoria = categoria
            };

        datos = await ReportService.GetConsumoVsPronosticoAsync(filter);
    }
}
